[
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/14394",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/14394/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/14394/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/14394/events",
    "html_url": "https://github.com/paritytech/substrate/issues/14394",
    "id": 1758591679,
    "node_id": "I_kwDOBoyF7M5o0fq_",
    "number": 14394,
    "title": "Move some inherent logic outside of `construct_runtime`",
    "user": {
      "login": "thiolliere",
      "id": 10416848,
      "node_id": "MDQ6VXNlcjEwNDE2ODQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/10416848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thiolliere",
      "html_url": "https://github.com/thiolliere",
      "followers_url": "https://api.github.com/users/thiolliere/followers",
      "following_url": "https://api.github.com/users/thiolliere/following{/other_user}",
      "gists_url": "https://api.github.com/users/thiolliere/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thiolliere/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thiolliere/subscriptions",
      "organizations_url": "https://api.github.com/users/thiolliere/orgs",
      "repos_url": "https://api.github.com/users/thiolliere/repos",
      "events_url": "https://api.github.com/users/thiolliere/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thiolliere/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560635,
        "node_id": "MDU6TGFiZWw3NDY1NjA2MzU=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/J0-enhancement",
        "name": "J0-enhancement",
        "color": "006b75",
        "default": false,
        "description": "An additional feature request."
      },
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2023-06-15T11:10:48Z",
    "updated_at": "2023-06-15T12:58:38Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "### Is there an existing issue?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Experiencing problems? Have you tried our Stack Exchange first?\r\n\r\n- [X] This is not a support question.\r\n\r\n### Request\r\n\r\nrelated https://github.com/paritytech/substrate/issues/13137#issuecomment-1592828493\r\n\r\nCurrently the code generated by `construct_runtime` for inherent is quite consequential.\r\n\r\nhttps://github.com/paritytech/substrate/blob/51b2f0ed6af8dd4facb18f1a489e192fd0673f7b/frame/support/procedural/src/construct_runtime/expand/inherent.rs#L59-L221\r\n\r\nThe logic should be defined in another place like executive or support.\r\n\r\nInstead `construct_runtime` should implement `is_inherent` and `check_inherent` as an aggregation of pallets implementations (and keep current implementation of `create_extrinsic`)\r\n\r\nother functions `check_extrinsics` (of a block) and `ensure_inherent_are_first` should be implemented in a normal module, not generated by the macro.\r\n\r\n### Are you willing to help with this request?\r\n\r\nYes! I plan to implement it",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/14394/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/14394/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/14278",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/14278/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/14278/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/14278/events",
    "html_url": "https://github.com/paritytech/substrate/issues/14278",
    "id": 1734827471,
    "node_id": "I_kwDOBoyF7M5nZ13P",
    "number": 14278,
    "title": "try-runtime-cli: nudge users to use snapshots",
    "user": {
      "login": "liamaharon",
      "id": 16665596,
      "node_id": "MDQ6VXNlcjE2NjY1NTk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/16665596?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/liamaharon",
      "html_url": "https://github.com/liamaharon",
      "followers_url": "https://api.github.com/users/liamaharon/followers",
      "following_url": "https://api.github.com/users/liamaharon/following{/other_user}",
      "gists_url": "https://api.github.com/users/liamaharon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/liamaharon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liamaharon/subscriptions",
      "organizations_url": "https://api.github.com/users/liamaharon/orgs",
      "repos_url": "https://api.github.com/users/liamaharon/repos",
      "events_url": "https://api.github.com/users/liamaharon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/liamaharon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      },
      {
        "id": 746560692,
        "node_id": "MDU6TGFiZWw3NDY1NjA2OTI=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z1-easy",
        "name": "Z1-easy",
        "color": "e8e0fc",
        "default": false,
        "description": "Can be fixed primarily by duplicating and adapting code by an intermediate coder"
      },
      {
        "id": 5121631623,
        "node_id": "LA_kwDOBoyF7M8AAAABMUXlhw",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/T1-runtime",
        "name": "T1-runtime",
        "color": "F5FCE6",
        "default": false,
        "description": "This PR/Issue is related to the topic “runtime”."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2023-05-31T19:02:52Z",
    "updated_at": "2023-06-07T15:30:20Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Related https://github.com/paritytech/substrate/issues/13975\r\n\r\nThe 'straight forward' way of getting commands like `execute-block`, `on-runtime-upgrade`, etc to work is using `live ws://host-uri`. However, it can be quite slow.\r\n\r\nIf a developer wants to run these commands repeatedly, it's much more efficient to run `create-snapshot` once to create a snapshot, and thereafter use the snapshot instead of fetching the live state each time. Snapshots load most of the time <1s.\r\n\r\nDevelopers are sometimes not aware of the benefit of snapshots, I suggest nudge them with some logs when they use `live`. Something very roughly along the lines of:\r\n\r\n> INFO: If you are repeatedly running this command with the `live` option, you may benefit from using snapshots which have close to instantaneous load times. \r\n> INFO: 1. Create a snapshot with `try-runtime-cli create-snapshot <good arg suggestions>`\r\n> INFO: 2. Next time you run this command, replace `live ws://<their-node-uri>` with `snap node-state.snapshot`\r\n\r\n---\r\n\r\n              I was thinking when someone executes a command like `on-runtime-upgrade live ws://...`, they probably want to take a snapshot and from then on use `snap` instead of `live`. Not sure why the sync mode would matter, maybe I misunderstand?\r\n\r\n_Originally posted by @liamaharon in https://github.com/paritytech/substrate/issues/14085#issuecomment-1570153736_\r\n            ",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/14278/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/14278/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/14234",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/14234/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/14234/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/14234/events",
    "html_url": "https://github.com/paritytech/substrate/issues/14234",
    "id": 1727459164,
    "node_id": "I_kwDOBoyF7M5m9u9c",
    "number": 14234,
    "title": "tracking issue for full unleash of `DefaultConfig` for FRAME",
    "user": {
      "login": "kianenigma",
      "id": 5588131,
      "node_id": "MDQ6VXNlcjU1ODgxMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5588131?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kianenigma",
      "html_url": "https://github.com/kianenigma",
      "followers_url": "https://api.github.com/users/kianenigma/followers",
      "following_url": "https://api.github.com/users/kianenigma/following{/other_user}",
      "gists_url": "https://api.github.com/users/kianenigma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kianenigma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kianenigma/subscriptions",
      "organizations_url": "https://api.github.com/users/kianenigma/orgs",
      "repos_url": "https://api.github.com/users/kianenigma/repos",
      "events_url": "https://api.github.com/users/kianenigma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kianenigma/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560662,
        "node_id": "MDU6TGFiZWw3NDY1NjA2NjI=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/J1-meta",
        "name": "J1-meta",
        "color": "0C7BAD",
        "default": false,
        "description": "A specific issue for grouping tasks or bugs of a specific category."
      },
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      },
      {
        "id": 5121631623,
        "node_id": "LA_kwDOBoyF7M8AAAABMUXlhw",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/T1-runtime",
        "name": "T1-runtime",
        "color": "F5FCE6",
        "default": false,
        "description": "This PR/Issue is related to the topic “runtime”."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "kianenigma",
      "id": 5588131,
      "node_id": "MDQ6VXNlcjU1ODgxMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5588131?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kianenigma",
      "html_url": "https://github.com/kianenigma",
      "followers_url": "https://api.github.com/users/kianenigma/followers",
      "following_url": "https://api.github.com/users/kianenigma/following{/other_user}",
      "gists_url": "https://api.github.com/users/kianenigma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kianenigma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kianenigma/subscriptions",
      "organizations_url": "https://api.github.com/users/kianenigma/orgs",
      "repos_url": "https://api.github.com/users/kianenigma/repos",
      "events_url": "https://api.github.com/users/kianenigma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kianenigma/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kianenigma",
        "id": 5588131,
        "node_id": "MDQ6VXNlcjU1ODgxMzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5588131?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kianenigma",
        "html_url": "https://github.com/kianenigma",
        "followers_url": "https://api.github.com/users/kianenigma/followers",
        "following_url": "https://api.github.com/users/kianenigma/following{/other_user}",
        "gists_url": "https://api.github.com/users/kianenigma/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kianenigma/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kianenigma/subscriptions",
        "organizations_url": "https://api.github.com/users/kianenigma/orgs",
        "repos_url": "https://api.github.com/users/kianenigma/repos",
        "events_url": "https://api.github.com/users/kianenigma/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kianenigma/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2023-05-26T11:37:20Z",
    "updated_at": "2023-06-25T12:57:58Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "https://github.com/paritytech/substrate/pull/13454 will bring in the basic functionality needed to start using this feature. See this example to learn more. \r\n\r\nThis will mark the first version of this work complete, but a lot has to be done in order for it to be fully complete.\r\n\r\n## Improve Error Handling, Bugs\r\n\r\n* [ ] Improve error handling. There seems to be an error in the `parse/config.rs` file that allows `#[pallet::whatever]` to be parsed and ignored in `#[pallet::config]`. This has to be fixed.\r\n* [x] Properly hide `__export_tokens_tt_test_default_config` and similar from docs. \r\n* [ ] Handle pallet instancing. \r\n\r\n## Full usage in Substrate Pallets \r\n\r\n* [ ] migrate the docs for `derive_impl` to use real code. As all of this functionality can work on normal traits, and as per #14115, we should strive to make the docs of `derive_impl` be real rust code. We might even want to remove `./frame/example/default-config` in favor this. \r\n\r\n* Provide testing defaults for common pallets\r\n  * [x] System: already provided\r\n  * [x] Balances https://github.com/paritytech/substrate/pull/14453\r\n  * [ ] Timestamp\r\n  * [ ] ...?\r\n\r\n* Then, we should start migrating existing pallets and their test setup to use the unified testing prelude of system, balances and so on. Here's a tracking list: \r\n  - [ ] alliance\r\n  - [ ] asset-conversion\r\n  - [ ] asset-rate\r\n  - [ ] assets\r\n  - [ ] atomic-swap\r\n  - [ ] aura\r\n  - [ ] authority-discovery\r\n  - [ ] authorship\r\n  - [ ] babe\r\n  - [ ] bags-list\r\n  - [ ] balances\r\n  - [ ] beefy\r\n  - [ ] beefy-mmr\r\n  - [ ] bounties\r\n  - [ ] child-bounties\r\n  - [ ] collective\r\n  - [ ] contracts\r\n  - [ ] conviction-voting\r\n  - [ ] core-fellowship\r\n  - [ ] democracy\r\n  - [ ] election-provider-multi-phase\r\n  - [ ] elections-phragmen\r\n  - [ ] executive\r\n  - [ ] fast-unstake\r\n  - [ ] glutton\r\n  - [ ] grandpa\r\n  - [ ] identity\r\n  - [ ] im-online\r\n  - [ ] indices\r\n  - [ ] insecure-randomness-collective-flip\r\n  - [ ] lottery\r\n  - [ ] membership\r\n  - [ ] merkle-mountain-range\r\n  - [ ] message-queue\r\n  - [x] multisig https://github.com/paritytech/substrate/pull/14453\r\n  - [ ] nft-fractionalization\r\n  - [ ] nfts\r\n  - [ ] nicks\r\n  - [ ] nis\r\n  - [ ] node-authorization\r\n  - [ ] nomination-pools\r\n  - [ ] offences\r\n  - [ ] preimage\r\n  - [x] proxy https://github.com/paritytech/substrate/pull/14453\r\n  - [ ] ranked-collective\r\n  - [ ] recovery\r\n  - [ ] referenda\r\n  - [ ] remark\r\n  - [ ] root-offences\r\n  - [ ] root-testing\r\n  - [ ] salary\r\n  - [ ] scheduler\r\n  - [ ] scored-pool\r\n  - [ ] session\r\n  - [ ] society\r\n  - [ ] staking\r\n  - [ ] staking-bags-benchmarks\r\n  - [ ] state-trie-migration\r\n  - [ ] statement\r\n  - [ ] sudo\r\n  - [ ] system\r\n  - [ ] timestamp\r\n  - [ ] tips\r\n  - [ ] transaction-payment\r\n  - [ ] transaction-storage\r\n  - [ ] treasury\r\n  - [ ] try-runtime\r\n  - [ ] uniques\r\n  - [ ] utility\r\n  - [ ] vesting\r\n  - [ ] whitelist\r\n\r\n## Full Usage in `node-template-runtime` and `parachain-template-runtime`\r\n\r\nWe should provide runtime templates that utilize this, evangelising its usage. This requires us to carefully consider what is a reasonable default for a node template in order to use. We should provide possibly two new preludes: \r\n\r\n## Full usage in `westend` -> `kusama` -> `polkadot` runtimes. \r\n\r\nOnce we have are more and more confident in both the core functionality, and our skills to define sensible defaults, we can slowly start migrating perhaps some of the configs define in Polkadot to use this feature. \r\n\r\nFor security reasons we should be super caution here. Adding `#[derive_impl]` will open the door for upstream changes manipulating the configurations used in the Polkadot runtime. Perhaps we should only ever do this once we have more tooling that could notify us of unexpected upstream changes to `config_preludes`. \r\n\r\nI would personally find it reasonable to never use this feature in production runtimes for this reason. \r\n\r\n## V2\r\n\r\nAt the moment, the system that is introduced is has some limitations. Most notably: \r\n\r\n- [x] it cannot provide default for types that are reliant on types that are themselves reliant on `frame_system::Config`. For example, a `type Admin: Get<Self::AccountId>` cannot have a default. Is is mainly because `trait DefaultConfig` is not in itself `trait DefaultConfig: frame_system::DefaultConfig`. Moreover, sadly, because the definition of `BalanceOf<T>` (somewhat needlessly) also relies on `frame_system::Config::AccountId`, anything akin to `Get<BalanceOf<Self>>` can also not have a sensible default.  https://github.com/paritytech/substrate/pull/14453\r\n\r\nI believe this is father easy to fix, by standardizing `frame_system::DefaultConfig` and making `trait DefaultConfig: frame_system::DefaultConfig`. \r\n\r\n- [ ] If the above is done, we are only left with types that cannot really have a default in any pallet. Such types are: `PalletInfo`, `RuntimeEvent`, `RuntimeCall` and such. Such types can also be mocked but they require more coordination with `construct_runtime!`. A new attribute can mark these types simply as `#[derive_from_runtime]` or similar, which would mean they are expected to be found in the existing scope with the same name. \r\n\r\nOther approaches could be explored for the last step, as I am not quite sure what is the best way forward. ",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/14234/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/14234/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/14127",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/14127/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/14127/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/14127/events",
    "html_url": "https://github.com/paritytech/substrate/issues/14127",
    "id": 1707296781,
    "node_id": "I_kwDOBoyF7M5lw0gN",
    "number": 14127,
    "title": "Allow `frame-macros` to work without needing `frame-support`, `frame-system` and such being in scope. ",
    "user": {
      "login": "kianenigma",
      "id": 5588131,
      "node_id": "MDQ6VXNlcjU1ODgxMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5588131?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kianenigma",
      "html_url": "https://github.com/kianenigma",
      "followers_url": "https://api.github.com/users/kianenigma/followers",
      "following_url": "https://api.github.com/users/kianenigma/following{/other_user}",
      "gists_url": "https://api.github.com/users/kianenigma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kianenigma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kianenigma/subscriptions",
      "organizations_url": "https://api.github.com/users/kianenigma/orgs",
      "repos_url": "https://api.github.com/users/kianenigma/repos",
      "events_url": "https://api.github.com/users/kianenigma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kianenigma/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560635,
        "node_id": "MDU6TGFiZWw3NDY1NjA2MzU=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/J0-enhancement",
        "name": "J0-enhancement",
        "color": "006b75",
        "default": false,
        "description": "An additional feature request."
      },
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      },
      {
        "id": 5121631623,
        "node_id": "LA_kwDOBoyF7M8AAAABMUXlhw",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/T1-runtime",
        "name": "T1-runtime",
        "color": "F5FCE6",
        "default": false,
        "description": "This PR/Issue is related to the topic “runtime”."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "sam0x17",
      "id": 1855021,
      "node_id": "MDQ6VXNlcjE4NTUwMjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1855021?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sam0x17",
      "html_url": "https://github.com/sam0x17",
      "followers_url": "https://api.github.com/users/sam0x17/followers",
      "following_url": "https://api.github.com/users/sam0x17/following{/other_user}",
      "gists_url": "https://api.github.com/users/sam0x17/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sam0x17/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sam0x17/subscriptions",
      "organizations_url": "https://api.github.com/users/sam0x17/orgs",
      "repos_url": "https://api.github.com/users/sam0x17/repos",
      "events_url": "https://api.github.com/users/sam0x17/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sam0x17/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [

    ],
    "milestone": null,
    "comments": 12,
    "created_at": "2023-05-12T09:35:43Z",
    "updated_at": "2023-06-17T03:17:53Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I am playing with the idea of having a single crate, called `frame`, that is only docs + re-exports of the major types that you need when developing with frame, hopefully removing the need to import like 6 crates just have a shell pallet. \r\n\r\nOne blocker I have so far is that pallet macros currently make an assumption about the existence of `frame-system`, `frame-support`, `codec`, and `type-info` _in Cargo.toml_. In principle, I don't think this dependency is strictly needed, and end of the day the pallet macros need to have a valid path to these crates, eg in the simplest case `#[pallet::pallet(<path-to-system>, <path-to-support>)]`, but I am wondering if there is a beter way to handle that?\r\n\r\nBefore investigating further, I should bring in this `frame` examples as a branch. ",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/14127/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/14127/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/14085",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/14085/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/14085/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/14085/events",
    "html_url": "https://github.com/paritytech/substrate/issues/14085",
    "id": 1698589646,
    "node_id": "I_kwDOBoyF7M5lPmvO",
    "number": 14085,
    "title": "try-runtime-cli: parallel key scraping",
    "user": {
      "login": "liamaharon",
      "id": 16665596,
      "node_id": "MDQ6VXNlcjE2NjY1NTk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/16665596?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/liamaharon",
      "html_url": "https://github.com/liamaharon",
      "followers_url": "https://api.github.com/users/liamaharon/followers",
      "following_url": "https://api.github.com/users/liamaharon/following{/other_user}",
      "gists_url": "https://api.github.com/users/liamaharon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/liamaharon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liamaharon/subscriptions",
      "organizations_url": "https://api.github.com/users/liamaharon/orgs",
      "repos_url": "https://api.github.com/users/liamaharon/repos",
      "events_url": "https://api.github.com/users/liamaharon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/liamaharon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560635,
        "node_id": "MDU6TGFiZWw3NDY1NjA2MzU=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/J0-enhancement",
        "name": "J0-enhancement",
        "color": "006b75",
        "default": false,
        "description": "An additional feature request."
      },
      {
        "id": 746560684,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODQ=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/U4-some_day_maybe",
        "name": "U4-some_day_maybe",
        "color": "d2d1d3",
        "default": false,
        "description": "Issue might be worth doing eventually."
      },
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      },
      {
        "id": 5121631623,
        "node_id": "LA_kwDOBoyF7M8AAAABMUXlhw",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/T1-runtime",
        "name": "T1-runtime",
        "color": "F5FCE6",
        "default": false,
        "description": "This PR/Issue is related to the topic “runtime”."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2023-05-06T11:22:47Z",
    "updated_at": "2023-06-07T15:31:23Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "## Motivation\r\n\r\nThe current key scraping implementation is is quite inefficient, fetching 1k keys at a time, waiting for each batch of 1k keys to be returned before asking for the next one \r\n\r\nhttps://github.com/paritytech/substrate/blob/master/utils/frame/remote-externalities/src/lib.rs#L348-L392\r\n\r\nThis is not so bad when fetching keys from a local node where latency is not a big factor, but can slow things down very significantly when using a remote node when most of the time spend fetching keys becomes latency rather than the node doing work. \r\n\r\nUnfortunately, most nodes seem to have a hard limit imposed preventing more than 1k keys being fetched in a single request.\r\n\r\n## Suggested solution\r\n\r\nRather than fetching all keys for the `prefix` in a single `rpc_get_keys_paged` request here https://github.com/paritytech/substrate/blob/master/utils/frame/remote-externalities/src/lib.rs#L528-L533, split the `prefix` up into N parts and run the `rpc_get_keys_paged` tasks in parallel using async/await. \r\n\r\ne.g. two parallel tasks:\r\nstart_keys: 0x000000 end_keys: 0x777777\r\nstart_keys: 0x777777 end_keys: 0xffffff\r\n\r\n## Bonus (probably for a seperate issue/PR once this one is closed)\r\n\r\nFetch storage values for keys as they're pulled from the node, instead of waiting for all keys to be pulled before fetching values.\r\n\r\n## Notes\r\n\r\nThis is not high priority, but worth doing once try-runtime-cli is in a more complete stable state to improve the experience pulling state from a remote node.",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/14085/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/14085/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/14066",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/14066/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/14066/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/14066/events",
    "html_url": "https://github.com/paritytech/substrate/issues/14066",
    "id": 1693709772,
    "node_id": "I_kwDOBoyF7M5k8_XM",
    "number": 14066,
    "title": "try-runtime-cli: remove DB operations in async code",
    "user": {
      "login": "liamaharon",
      "id": 16665596,
      "node_id": "MDQ6VXNlcjE2NjY1NTk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/16665596?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/liamaharon",
      "html_url": "https://github.com/liamaharon",
      "followers_url": "https://api.github.com/users/liamaharon/followers",
      "following_url": "https://api.github.com/users/liamaharon/following{/other_user}",
      "gists_url": "https://api.github.com/users/liamaharon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/liamaharon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liamaharon/subscriptions",
      "organizations_url": "https://api.github.com/users/liamaharon/orgs",
      "repos_url": "https://api.github.com/users/liamaharon/repos",
      "events_url": "https://api.github.com/users/liamaharon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/liamaharon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560633,
        "node_id": "MDU6TGFiZWw3NDY1NjA2MzM=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/I9-optimisation",
        "name": "I9-optimisation",
        "color": "009B40",
        "default": false,
        "description": "An enhancement to provide better overall performance in terms of time-to-completion for a task."
      },
      {
        "id": 746560684,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODQ=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/U4-some_day_maybe",
        "name": "U4-some_day_maybe",
        "color": "d2d1d3",
        "default": false,
        "description": "Issue might be worth doing eventually."
      },
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      },
      {
        "id": 5121631623,
        "node_id": "LA_kwDOBoyF7M8AAAABMUXlhw",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/T1-runtime",
        "name": "T1-runtime",
        "color": "F5FCE6",
        "default": false,
        "description": "This PR/Issue is related to the topic “runtime”."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2023-05-03T09:29:44Z",
    "updated_at": "2023-06-07T15:31:28Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "              you don't have to do it in this PR but worth investing whether it makes things faster or not.\r\n\r\nIdeally, we shouldn't do any DB operations in async code it might fuckup the async scheduler in tokio\r\n\r\n_Originally posted by @niklasad1 in https://github.com/paritytech/substrate/pull/14057#discussion_r1181570805_\r\n            ",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/14066/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/14066/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/14032",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/14032/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/14032/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/14032/events",
    "html_url": "https://github.com/paritytech/substrate/issues/14032",
    "id": 1686689382,
    "node_id": "I_kwDOBoyF7M5kiNZm",
    "number": 14032,
    "title": "Wrap EPM `Snapshot`, `SnapshotMetadata` and `DesiredTargets` to ensure invariants",
    "user": {
      "login": "gpestana",
      "id": 1398860,
      "node_id": "MDQ6VXNlcjEzOTg4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1398860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gpestana",
      "html_url": "https://github.com/gpestana",
      "followers_url": "https://api.github.com/users/gpestana/followers",
      "following_url": "https://api.github.com/users/gpestana/following{/other_user}",
      "gists_url": "https://api.github.com/users/gpestana/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gpestana/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gpestana/subscriptions",
      "organizations_url": "https://api.github.com/users/gpestana/orgs",
      "repos_url": "https://api.github.com/users/gpestana/repos",
      "events_url": "https://api.github.com/users/gpestana/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gpestana/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      },
      {
        "id": 2125641955,
        "node_id": "MDU6TGFiZWwyMTI1NjQxOTU1",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/C1-low",
        "name": "C1-low",
        "color": "EBF7B3",
        "default": false,
        "description": "PR touches the given topic and has a low impact on builders."
      },
      {
        "id": 2831480167,
        "node_id": "MDU6TGFiZWwyODMxNDgwMTY3",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/D3-trivial%20%F0%9F%A7%B8",
        "name": "D3-trivial 🧸",
        "color": "FBCA04",
        "default": false,
        "description": "PR contains trivial changes in a runtime directory that do not require an audit"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "wirednkod",
      "id": 5408605,
      "node_id": "MDQ6VXNlcjU0MDg2MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5408605?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wirednkod",
      "html_url": "https://github.com/wirednkod",
      "followers_url": "https://api.github.com/users/wirednkod/followers",
      "following_url": "https://api.github.com/users/wirednkod/following{/other_user}",
      "gists_url": "https://api.github.com/users/wirednkod/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wirednkod/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wirednkod/subscriptions",
      "organizations_url": "https://api.github.com/users/wirednkod/orgs",
      "repos_url": "https://api.github.com/users/wirednkod/repos",
      "events_url": "https://api.github.com/users/wirednkod/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wirednkod/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "wirednkod",
        "id": 5408605,
        "node_id": "MDQ6VXNlcjU0MDg2MDU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5408605?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/wirednkod",
        "html_url": "https://github.com/wirednkod",
        "followers_url": "https://api.github.com/users/wirednkod/followers",
        "following_url": "https://api.github.com/users/wirednkod/following{/other_user}",
        "gists_url": "https://api.github.com/users/wirednkod/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/wirednkod/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/wirednkod/subscriptions",
        "organizations_url": "https://api.github.com/users/wirednkod/orgs",
        "repos_url": "https://api.github.com/users/wirednkod/repos",
        "events_url": "https://api.github.com/users/wirednkod/events{/privacy}",
        "received_events_url": "https://api.github.com/users/wirednkod/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2023-04-27T11:52:10Z",
    "updated_at": "2023-04-27T11:57:20Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "The `Snapshot`, `SnapshotMetadata` and `DesiredTargets` storage items in the [EPM pallet](https://paritytech.github.io/substrate/master/pallet_election_provider_multi_phase/index.html) must be kept in sync throughout the election lifetime and be killed in tandem. Currently, these storage items are mutated in different places in the pallet. \r\n\r\nIt makes sense to refactor EPM to hide those storage items behind a shared wrapper that is used to access/mutate and kill the inner items, so as to make sure the invariants hold true at every point in the election.\r\n\r\n([related comment](https://github.com/paritytech/substrate/pull/13979#discussion_r1176946709))",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/14032/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/14032/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/14026",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/14026/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/14026/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/14026/events",
    "html_url": "https://github.com/paritytech/substrate/issues/14026",
    "id": 1685828069,
    "node_id": "I_kwDOBoyF7M5ke7Hl",
    "number": 14026,
    "title": "`pallet-identity`: Make `identity` generic",
    "user": {
      "login": "bkchr",
      "id": 5718007,
      "node_id": "MDQ6VXNlcjU3MTgwMDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5718007?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkchr",
      "html_url": "https://github.com/bkchr",
      "followers_url": "https://api.github.com/users/bkchr/followers",
      "following_url": "https://api.github.com/users/bkchr/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkchr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkchr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkchr/subscriptions",
      "organizations_url": "https://api.github.com/users/bkchr/orgs",
      "repos_url": "https://api.github.com/users/bkchr/repos",
      "events_url": "https://api.github.com/users/bkchr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkchr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560635,
        "node_id": "MDU6TGFiZWw3NDY1NjA2MzU=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/J0-enhancement",
        "name": "J0-enhancement",
        "color": "006b75",
        "default": false,
        "description": "An additional feature request."
      },
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      },
      {
        "id": 5121631623,
        "node_id": "LA_kwDOBoyF7M8AAAABMUXlhw",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/T1-runtime",
        "name": "T1-runtime",
        "color": "F5FCE6",
        "default": false,
        "description": "This PR/Issue is related to the topic “runtime”."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "hirschenberger",
      "id": 1053180,
      "node_id": "MDQ6VXNlcjEwNTMxODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1053180?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hirschenberger",
      "html_url": "https://github.com/hirschenberger",
      "followers_url": "https://api.github.com/users/hirschenberger/followers",
      "following_url": "https://api.github.com/users/hirschenberger/following{/other_user}",
      "gists_url": "https://api.github.com/users/hirschenberger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hirschenberger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hirschenberger/subscriptions",
      "organizations_url": "https://api.github.com/users/hirschenberger/orgs",
      "repos_url": "https://api.github.com/users/hirschenberger/repos",
      "events_url": "https://api.github.com/users/hirschenberger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hirschenberger/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "hirschenberger",
        "id": 1053180,
        "node_id": "MDQ6VXNlcjEwNTMxODA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1053180?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hirschenberger",
        "html_url": "https://github.com/hirschenberger",
        "followers_url": "https://api.github.com/users/hirschenberger/followers",
        "following_url": "https://api.github.com/users/hirschenberger/following{/other_user}",
        "gists_url": "https://api.github.com/users/hirschenberger/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/hirschenberger/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/hirschenberger/subscriptions",
        "organizations_url": "https://api.github.com/users/hirschenberger/orgs",
        "repos_url": "https://api.github.com/users/hirschenberger/repos",
        "events_url": "https://api.github.com/users/hirschenberger/events{/privacy}",
        "received_events_url": "https://api.github.com/users/hirschenberger/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2023-04-26T22:24:54Z",
    "updated_at": "2023-06-07T15:31:39Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "`IdentityInfo` is currently declared in `pallet-identity`: \r\nhttps://github.com/paritytech/substrate/blob/f6928f87138c25e0f16821a19fb1feb0edf8e214/frame/identity/src/types.rs#L290-L334\r\n\r\nIt already supports `additional` identities that are free for the user to choose. However, people are still opening issues about wanting special fields for discord, github or whatever to be added. It would be much better to make the whole `IdentityInfo` generic via the `Config` trait.\r\n\r\nSo, a `IdentityInfo` associated type should be added to the `Config` trait and everywhere where currently `IdentityInfo` is being used, should be replaced by `T::IdentityInfo`. To stay backwards compatible, we should keep the old `IdentityInfo` struct and then all downstream users can just point the `Config::IdentityInfo` to `pallet_identity::IdentityInfo`.",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/14026/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/14026/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/13860",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/13860/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/13860/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/13860/events",
    "html_url": "https://github.com/paritytech/substrate/issues/13860",
    "id": 1659797792,
    "node_id": "I_kwDOBoyF7M5i7oEg",
    "number": 13860,
    "title": "Executor: Replace string errors with full source error",
    "user": {
      "login": "mrcnski",
      "id": 6035856,
      "node_id": "MDQ6VXNlcjYwMzU4NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6035856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrcnski",
      "html_url": "https://github.com/mrcnski",
      "followers_url": "https://api.github.com/users/mrcnski/followers",
      "following_url": "https://api.github.com/users/mrcnski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrcnski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrcnski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrcnski/subscriptions",
      "organizations_url": "https://api.github.com/users/mrcnski/orgs",
      "repos_url": "https://api.github.com/users/mrcnski/repos",
      "events_url": "https://api.github.com/users/mrcnski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrcnski/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560632,
        "node_id": "MDU6TGFiZWw3NDY1NjA2MzI=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/I7-refactor",
        "name": "I7-refactor",
        "color": "dbea04",
        "default": false,
        "description": "Code needs refactoring."
      },
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2023-04-09T08:34:48Z",
    "updated_at": "2023-04-09T08:34:48Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "# ISSUE\r\n\r\n## Overview\r\n\r\nIn `client/executor/common/src/error.rs` we have `Error` and `WasmError` which have multiple variants wrapping a `String`. This makes it hard (impossible?) to reliably match on the underlying cause of the error. \r\n\r\nFor example, [in this PR](https://github.com/paritytech/polkadot/pull/7011#discussion_r1159007957) we want to be able to tell if `WasmError::Other` is due to a file-not-found error. But currently all we have is a `String`, and parsing the string is a no-go (the wording may change across locales, etc.).\r\n\r\n## Related Issue\r\n\r\nhttps://github.com/paritytech/substrate/issues/13853",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/13860/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/13860/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/13857",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/13857/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/13857/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/13857/events",
    "html_url": "https://github.com/paritytech/substrate/issues/13857",
    "id": 1659107072,
    "node_id": "I_kwDOBoyF7M5i4_cA",
    "number": 13857,
    "title": "Incorporate fuzzers into conformance tests",
    "user": {
      "login": "liamaharon",
      "id": 16665596,
      "node_id": "MDQ6VXNlcjE2NjY1NTk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/16665596?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/liamaharon",
      "html_url": "https://github.com/liamaharon",
      "followers_url": "https://api.github.com/users/liamaharon/followers",
      "following_url": "https://api.github.com/users/liamaharon/following{/other_user}",
      "gists_url": "https://api.github.com/users/liamaharon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/liamaharon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liamaharon/subscriptions",
      "organizations_url": "https://api.github.com/users/liamaharon/orgs",
      "repos_url": "https://api.github.com/users/liamaharon/repos",
      "events_url": "https://api.github.com/users/liamaharon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/liamaharon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560630,
        "node_id": "MDU6TGFiZWw3NDY1NjA2MzA=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/I5-tests",
        "name": "I5-tests",
        "color": "f3a603",
        "default": false,
        "description": "Tests need fixing, improving or augmenting."
      },
      {
        "id": 746560684,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODQ=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/U4-some_day_maybe",
        "name": "U4-some_day_maybe",
        "color": "d2d1d3",
        "default": false,
        "description": "Issue might be worth doing eventually."
      },
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      },
      {
        "id": 5121631623,
        "node_id": "LA_kwDOBoyF7M8AAAABMUXlhw",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/T1-runtime",
        "name": "T1-runtime",
        "color": "F5FCE6",
        "default": false,
        "description": "This PR/Issue is related to the topic “runtime”."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2023-04-07T19:10:19Z",
    "updated_at": "2023-06-07T15:32:13Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "              I think we could also employ fuzzers - eventually.  \r\nThey look quite similar to your pattern so far and test the assumptions with many different inputs.  \r\nA recent one is [this](https://github.com/paritytech/substrate/blob/344d3a6f850ef52e05368fdd58f7d9461658185b/primitives/arithmetic/fuzzer/src/per_thing_mult_fraction.rs#L42) and the `per_thing_from_rational` in that folder.\r\n\r\n_Originally posted by @ggwpez in https://github.com/paritytech/substrate/pull/13852#discussion_r1160675176_\r\n            ",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/13857/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/13857/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/13853",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/13853/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/13853/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/13853/events",
    "html_url": "https://github.com/paritytech/substrate/issues/13853",
    "id": 1658651959,
    "node_id": "I_kwDOBoyF7M5i3QU3",
    "number": 13853,
    "title": "Executor: Remove non-descriptive `WasmError::Other` variant",
    "user": {
      "login": "mrcnski",
      "id": 6035856,
      "node_id": "MDQ6VXNlcjYwMzU4NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6035856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrcnski",
      "html_url": "https://github.com/mrcnski",
      "followers_url": "https://api.github.com/users/mrcnski/followers",
      "following_url": "https://api.github.com/users/mrcnski/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrcnski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrcnski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrcnski/subscriptions",
      "organizations_url": "https://api.github.com/users/mrcnski/orgs",
      "repos_url": "https://api.github.com/users/mrcnski/repos",
      "events_url": "https://api.github.com/users/mrcnski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrcnski/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560632,
        "node_id": "MDU6TGFiZWw3NDY1NjA2MzI=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/I7-refactor",
        "name": "I7-refactor",
        "color": "dbea04",
        "default": false,
        "description": "Code needs refactoring."
      },
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2023-04-07T10:33:04Z",
    "updated_at": "2023-04-09T08:25:56Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "It should be possible to replace its usage with more specific variants, either existing or new ones.",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/13853/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/13853/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/13840",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/13840/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/13840/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/13840/events",
    "html_url": "https://github.com/paritytech/substrate/issues/13840",
    "id": 1657158085,
    "node_id": "I_kwDOBoyF7M5ixjnF",
    "number": 13840,
    "title": "try-runtime: execute a range of past blocks",
    "user": {
      "login": "kianenigma",
      "id": 5588131,
      "node_id": "MDQ6VXNlcjU1ODgxMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5588131?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kianenigma",
      "html_url": "https://github.com/kianenigma",
      "followers_url": "https://api.github.com/users/kianenigma/followers",
      "following_url": "https://api.github.com/users/kianenigma/following{/other_user}",
      "gists_url": "https://api.github.com/users/kianenigma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kianenigma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kianenigma/subscriptions",
      "organizations_url": "https://api.github.com/users/kianenigma/orgs",
      "repos_url": "https://api.github.com/users/kianenigma/repos",
      "events_url": "https://api.github.com/users/kianenigma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kianenigma/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560635,
        "node_id": "MDU6TGFiZWw3NDY1NjA2MzU=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/J0-enhancement",
        "name": "J0-enhancement",
        "color": "006b75",
        "default": false,
        "description": "An additional feature request."
      },
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      },
      {
        "id": 746560692,
        "node_id": "MDU6TGFiZWw3NDY1NjA2OTI=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z1-easy",
        "name": "Z1-easy",
        "color": "e8e0fc",
        "default": false,
        "description": "Can be fixed primarily by duplicating and adapting code by an intermediate coder"
      },
      {
        "id": 5121631623,
        "node_id": "LA_kwDOBoyF7M8AAAABMUXlhw",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/T1-runtime",
        "name": "T1-runtime",
        "color": "F5FCE6",
        "default": false,
        "description": "This PR/Issue is related to the topic “runtime”."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2023-04-06T10:35:56Z",
    "updated_at": "2023-06-07T15:32:15Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "An extension to the existing `execute-block` that, instead of re-executing one block, it executes a range of past blocks, as long as they are one continuous range. \r\n\r\nShould be tested with the new testing infra added in https://github.com/paritytech/substrate/pull/13794. ",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/13840/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/13840/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/13796",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/13796/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/13796/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/13796/events",
    "html_url": "https://github.com/paritytech/substrate/issues/13796",
    "id": 1650333808,
    "node_id": "I_kwDOBoyF7M5iXhhw",
    "number": 13796,
    "title": "try-runtime-cli docs and tests",
    "user": {
      "login": "liamaharon",
      "id": 16665596,
      "node_id": "MDQ6VXNlcjE2NjY1NTk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/16665596?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/liamaharon",
      "html_url": "https://github.com/liamaharon",
      "followers_url": "https://api.github.com/users/liamaharon/followers",
      "following_url": "https://api.github.com/users/liamaharon/following{/other_user}",
      "gists_url": "https://api.github.com/users/liamaharon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/liamaharon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liamaharon/subscriptions",
      "organizations_url": "https://api.github.com/users/liamaharon/orgs",
      "repos_url": "https://api.github.com/users/liamaharon/repos",
      "events_url": "https://api.github.com/users/liamaharon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/liamaharon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560630,
        "node_id": "MDU6TGFiZWw3NDY1NjA2MzA=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/I5-tests",
        "name": "I5-tests",
        "color": "f3a603",
        "default": false,
        "description": "Tests need fixing, improving or augmenting."
      },
      {
        "id": 746560631,
        "node_id": "MDU6TGFiZWw3NDY1NjA2MzE=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/I6-documentation",
        "name": "I6-documentation",
        "color": "fbca04",
        "default": false,
        "description": "Documentation needs fixing, improving or augmenting."
      },
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      },
      {
        "id": 5121631623,
        "node_id": "LA_kwDOBoyF7M8AAAABMUXlhw",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/T1-runtime",
        "name": "T1-runtime",
        "color": "F5FCE6",
        "default": false,
        "description": "This PR/Issue is related to the topic “runtime”."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "Szegoo",
      "id": 73715684,
      "node_id": "MDQ6VXNlcjczNzE1Njg0",
      "avatar_url": "https://avatars.githubusercontent.com/u/73715684?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Szegoo",
      "html_url": "https://github.com/Szegoo",
      "followers_url": "https://api.github.com/users/Szegoo/followers",
      "following_url": "https://api.github.com/users/Szegoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Szegoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Szegoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Szegoo/subscriptions",
      "organizations_url": "https://api.github.com/users/Szegoo/orgs",
      "repos_url": "https://api.github.com/users/Szegoo/repos",
      "events_url": "https://api.github.com/users/Szegoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Szegoo/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "Szegoo",
        "id": 73715684,
        "node_id": "MDQ6VXNlcjczNzE1Njg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/73715684?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Szegoo",
        "html_url": "https://github.com/Szegoo",
        "followers_url": "https://api.github.com/users/Szegoo/followers",
        "following_url": "https://api.github.com/users/Szegoo/following{/other_user}",
        "gists_url": "https://api.github.com/users/Szegoo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Szegoo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Szegoo/subscriptions",
        "organizations_url": "https://api.github.com/users/Szegoo/orgs",
        "repos_url": "https://api.github.com/users/Szegoo/repos",
        "events_url": "https://api.github.com/users/Szegoo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Szegoo/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2023-04-01T06:58:23Z",
    "updated_at": "2023-06-10T19:23:16Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "At least one try-runtime-cli command passes parameters in the incorrect order (https://substrate.stackexchange.com/q/7902/3991).\r\n\r\nNeed to audit all the examples in the docs and fix any issues, and write some CLI tests to make sure they don't break in the future.\r\n\r\nWe should also write some CLI tests. See `subtrate` CLI and I believe this repo is using similar testing patterns https://github.com/paritytech/staking-miner-v2/tree/main/tests for an examples on how to write the tests.\r\n\r\n### Docs\r\n- [ ] Audit doc examples (https://github.com/paritytech/substrate/pull/13967 credit @Szegoo)\r\n\r\n### Tests\r\n- [x] `follow-chain` https://github.com/paritytech/substrate/pull/13794\r\n- [ ] `on-runtime-upgrade`\r\n- [ ] `execute-block`\r\n- [ ] `fast-forward`\r\n- [ ] `create-snapshot`",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/13796/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/13796/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/13767",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/13767/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/13767/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/13767/events",
    "html_url": "https://github.com/paritytech/substrate/issues/13767",
    "id": 1647587454,
    "node_id": "I_kwDOBoyF7M5iNDB-",
    "number": 13767,
    "title": "Custom error message for `StorageNoopGuard`",
    "user": {
      "login": "ggwpez",
      "id": 10380170,
      "node_id": "MDQ6VXNlcjEwMzgwMTcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/10380170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ggwpez",
      "html_url": "https://github.com/ggwpez",
      "followers_url": "https://api.github.com/users/ggwpez/followers",
      "following_url": "https://api.github.com/users/ggwpez/following{/other_user}",
      "gists_url": "https://api.github.com/users/ggwpez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ggwpez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ggwpez/subscriptions",
      "organizations_url": "https://api.github.com/users/ggwpez/orgs",
      "repos_url": "https://api.github.com/users/ggwpez/repos",
      "events_url": "https://api.github.com/users/ggwpez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ggwpez/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      },
      {
        "id": 746560696,
        "node_id": "MDU6TGFiZWw3NDY1NjA2OTY=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z0-trivial",
        "name": "Z0-trivial",
        "color": "ffffff",
        "default": false,
        "description": "Writing the issue is of the same difficulty as patching the code."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2023-03-30T13:06:38Z",
    "updated_at": "2023-04-17T10:02:10Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "There should be a constructor like `from_error_message` and/or a setter for a custom error message on the `StorageNoopGuard`.  \r\nAlso we should add a `new()` function which does the same as `default()` - seems to be a pattern in Rust.",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/13767/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/13767/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/13726",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/13726/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/13726/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/13726/events",
    "html_url": "https://github.com/paritytech/substrate/issues/13726",
    "id": 1642504629,
    "node_id": "I_kwDOBoyF7M5h5qG1",
    "number": 13726,
    "title": "Run `integrity_test` in externalities",
    "user": {
      "login": "ggwpez",
      "id": 10380170,
      "node_id": "MDQ6VXNlcjEwMzgwMTcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/10380170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ggwpez",
      "html_url": "https://github.com/ggwpez",
      "followers_url": "https://api.github.com/users/ggwpez/followers",
      "following_url": "https://api.github.com/users/ggwpez/following{/other_user}",
      "gists_url": "https://api.github.com/users/ggwpez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ggwpez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ggwpez/subscriptions",
      "organizations_url": "https://api.github.com/users/ggwpez/orgs",
      "repos_url": "https://api.github.com/users/ggwpez/repos",
      "events_url": "https://api.github.com/users/ggwpez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ggwpez/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560628,
        "node_id": "MDU6TGFiZWw3NDY1NjA2Mjg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/I4-annoyance",
        "name": "I4-annoyance",
        "color": "F76E02",
        "default": false,
        "description": "The client behaves within expectations, however this “expected behaviour” itself is at issue."
      },
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      },
      {
        "id": 746560692,
        "node_id": "MDU6TGFiZWw3NDY1NjA2OTI=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z1-easy",
        "name": "Z1-easy",
        "color": "e8e0fc",
        "default": false,
        "description": "Can be fixed primarily by duplicating and adapting code by an intermediate coder"
      },
      {
        "id": 5121631623,
        "node_id": "LA_kwDOBoyF7M8AAAABMUXlhw",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/T1-runtime",
        "name": "T1-runtime",
        "color": "F5FCE6",
        "default": false,
        "description": "This PR/Issue is related to the topic “runtime”."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2023-03-27T17:20:23Z",
    "updated_at": "2023-06-07T15:32:43Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "We should probably run *all* of then inside externalities. In the past I was concerned about unintended consequences, but it just annoyed us again in: https://github.com/paritytech/polkadot/pull/6957\r\n\r\nSince there a parameter type was configured to be `storage` instead of `const`, so it would fail outside externalities.",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/13726/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/13726/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/13667",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/13667/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/13667/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/13667/events",
    "html_url": "https://github.com/paritytech/substrate/issues/13667",
    "id": 1634128158,
    "node_id": "I_kwDOBoyF7M5hZtEe",
    "number": 13667,
    "title": "Introduce checked `PerThing` arithmetics",
    "user": {
      "login": "ggwpez",
      "id": 10380170,
      "node_id": "MDQ6VXNlcjEwMzgwMTcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/10380170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ggwpez",
      "html_url": "https://github.com/ggwpez",
      "followers_url": "https://api.github.com/users/ggwpez/followers",
      "following_url": "https://api.github.com/users/ggwpez/following{/other_user}",
      "gists_url": "https://api.github.com/users/ggwpez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ggwpez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ggwpez/subscriptions",
      "organizations_url": "https://api.github.com/users/ggwpez/orgs",
      "repos_url": "https://api.github.com/users/ggwpez/repos",
      "events_url": "https://api.github.com/users/ggwpez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ggwpez/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560632,
        "node_id": "MDU6TGFiZWw3NDY1NjA2MzI=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/I7-refactor",
        "name": "I7-refactor",
        "color": "dbea04",
        "default": false,
        "description": "Code needs refactoring."
      },
      {
        "id": 746560635,
        "node_id": "MDU6TGFiZWw3NDY1NjA2MzU=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/J0-enhancement",
        "name": "J0-enhancement",
        "color": "006b75",
        "default": false,
        "description": "An additional feature request."
      },
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      },
      {
        "id": 746560692,
        "node_id": "MDU6TGFiZWw3NDY1NjA2OTI=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z1-easy",
        "name": "Z1-easy",
        "color": "e8e0fc",
        "default": false,
        "description": "Can be fixed primarily by duplicating and adapting code by an intermediate coder"
      },
      {
        "id": 5121631623,
        "node_id": "LA_kwDOBoyF7M8AAAABMUXlhw",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/T1-runtime",
        "name": "T1-runtime",
        "color": "F5FCE6",
        "default": false,
        "description": "This PR/Issue is related to the topic “runtime”."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2023-03-21T15:09:06Z",
    "updated_at": "2023-06-07T15:32:53Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Some `PerThing` functions are prone to zero division panics. This requires the runtime code to pay close attention when calling them.  \r\nInstead of relying on proof comments we could add fallible `checked` functions for:  \r\n- `multiply_by_rational_with_rounding`\r\n- `rational_mul_correction`\r\n\r\n(there could be more, did not check all)  \r\n\r\nContext: https://github.com/paritytech/substrate/pull/13660#issuecomment-1477817252",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/13667/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/13667/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/13511",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/13511/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/13511/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/13511/events",
    "html_url": "https://github.com/paritytech/substrate/issues/13511",
    "id": 1606891763,
    "node_id": "I_kwDOBoyF7M5fxzjz",
    "number": 13511,
    "title": "Extend `GetCallMetadata` with indices",
    "user": {
      "login": "ggwpez",
      "id": 10380170,
      "node_id": "MDQ6VXNlcjEwMzgwMTcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/10380170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ggwpez",
      "html_url": "https://github.com/ggwpez",
      "followers_url": "https://api.github.com/users/ggwpez/followers",
      "following_url": "https://api.github.com/users/ggwpez/following{/other_user}",
      "gists_url": "https://api.github.com/users/ggwpez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ggwpez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ggwpez/subscriptions",
      "organizations_url": "https://api.github.com/users/ggwpez/orgs",
      "repos_url": "https://api.github.com/users/ggwpez/repos",
      "events_url": "https://api.github.com/users/ggwpez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ggwpez/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560635,
        "node_id": "MDU6TGFiZWw3NDY1NjA2MzU=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/J0-enhancement",
        "name": "J0-enhancement",
        "color": "006b75",
        "default": false,
        "description": "An additional feature request."
      },
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      },
      {
        "id": 746560692,
        "node_id": "MDU6TGFiZWw3NDY1NjA2OTI=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z1-easy",
        "name": "Z1-easy",
        "color": "e8e0fc",
        "default": false,
        "description": "Can be fixed primarily by duplicating and adapting code by an intermediate coder"
      },
      {
        "id": 5121631623,
        "node_id": "LA_kwDOBoyF7M8AAAABMUXlhw",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/T1-runtime",
        "name": "T1-runtime",
        "color": "F5FCE6",
        "default": false,
        "description": "This PR/Issue is related to the topic “runtime”."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "kziemianek",
      "id": 1838338,
      "node_id": "MDQ6VXNlcjE4MzgzMzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1838338?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kziemianek",
      "html_url": "https://github.com/kziemianek",
      "followers_url": "https://api.github.com/users/kziemianek/followers",
      "following_url": "https://api.github.com/users/kziemianek/following{/other_user}",
      "gists_url": "https://api.github.com/users/kziemianek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kziemianek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kziemianek/subscriptions",
      "organizations_url": "https://api.github.com/users/kziemianek/orgs",
      "repos_url": "https://api.github.com/users/kziemianek/repos",
      "events_url": "https://api.github.com/users/kziemianek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kziemianek/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kziemianek",
        "id": 1838338,
        "node_id": "MDQ6VXNlcjE4MzgzMzg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1838338?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kziemianek",
        "html_url": "https://github.com/kziemianek",
        "followers_url": "https://api.github.com/users/kziemianek/followers",
        "following_url": "https://api.github.com/users/kziemianek/following{/other_user}",
        "gists_url": "https://api.github.com/users/kziemianek/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kziemianek/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kziemianek/subscriptions",
        "organizations_url": "https://api.github.com/users/kziemianek/orgs",
        "repos_url": "https://api.github.com/users/kziemianek/repos",
        "events_url": "https://api.github.com/users/kziemianek/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kziemianek/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2023-03-02T14:19:09Z",
    "updated_at": "2023-06-07T15:33:21Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "`GetCallMetadata` can currently be used to get the call- and module-name of a `RuntimeCall`.  \r\nIn cases where we want to select specific calls/modules, it is better to use their index than strings.  \r\n\r\n`GetCallMetadata` could therefore be extended to also return these indices. Looking internally, we use a `GetCallName` trait which is re-used in the `GetCallMetadata` trait. So probably analogous to that add a `GetCallIndex` and then re-use that as well.",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/13511/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/13511/timeline",
    "performed_via_github_app": null,
    "state_reason": "reopened"
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/13380",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/13380/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/13380/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/13380/events",
    "html_url": "https://github.com/paritytech/substrate/issues/13380",
    "id": 1582606008,
    "node_id": "I_kwDOBoyF7M5eVKa4",
    "number": 13380,
    "title": "Test UI of `storage_alias`",
    "user": {
      "login": "ggwpez",
      "id": 10380170,
      "node_id": "MDQ6VXNlcjEwMzgwMTcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/10380170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ggwpez",
      "html_url": "https://github.com/ggwpez",
      "followers_url": "https://api.github.com/users/ggwpez/followers",
      "following_url": "https://api.github.com/users/ggwpez/following{/other_user}",
      "gists_url": "https://api.github.com/users/ggwpez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ggwpez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ggwpez/subscriptions",
      "organizations_url": "https://api.github.com/users/ggwpez/orgs",
      "repos_url": "https://api.github.com/users/ggwpez/repos",
      "events_url": "https://api.github.com/users/ggwpez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ggwpez/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560630,
        "node_id": "MDU6TGFiZWw3NDY1NjA2MzA=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/I5-tests",
        "name": "I5-tests",
        "color": "f3a603",
        "default": false,
        "description": "Tests need fixing, improving or augmenting."
      },
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      },
      {
        "id": 746560692,
        "node_id": "MDU6TGFiZWw3NDY1NjA2OTI=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z1-easy",
        "name": "Z1-easy",
        "color": "e8e0fc",
        "default": false,
        "description": "Can be fixed primarily by duplicating and adapting code by an intermediate coder"
      },
      {
        "id": 5121631623,
        "node_id": "LA_kwDOBoyF7M8AAAABMUXlhw",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/T1-runtime",
        "name": "T1-runtime",
        "color": "F5FCE6",
        "default": false,
        "description": "This PR/Issue is related to the topic “runtime”."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2023-02-13T15:50:59Z",
    "updated_at": "2023-06-07T15:33:23Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "The [storage_alias_ui](https://github.com/paritytech/substrate/blob/cde8e7d5e31bb6c2188a375d1a6e794e6c77cf80/frame/support/test/tests/storage_alias_ui) tests are currently quite meager.  \r\nShould be extended to check all common combinations and types.  \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/13380/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/13380/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/13342",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/13342/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/13342/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/13342/events",
    "html_url": "https://github.com/paritytech/substrate/issues/13342",
    "id": 1576643544,
    "node_id": "I_kwDOBoyF7M5d-avY",
    "number": 13342,
    "title": "Come up with more scenarios for the Staking integration test",
    "user": {
      "login": "Ank4n",
      "id": 10196091,
      "node_id": "MDQ6VXNlcjEwMTk2MDkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/10196091?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ank4n",
      "html_url": "https://github.com/Ank4n",
      "followers_url": "https://api.github.com/users/Ank4n/followers",
      "following_url": "https://api.github.com/users/Ank4n/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ank4n/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ank4n/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ank4n/subscriptions",
      "organizations_url": "https://api.github.com/users/Ank4n/orgs",
      "repos_url": "https://api.github.com/users/Ank4n/repos",
      "events_url": "https://api.github.com/users/Ank4n/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ank4n/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      },
      {
        "id": 746560698,
        "node_id": "MDU6TGFiZWw3NDY1NjA2OTg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z7-question",
        "name": "Z7-question",
        "color": "fff5fb",
        "default": false,
        "description": "Issue is a question. Closer should answer."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2023-02-08T19:02:04Z",
    "updated_at": "2023-02-08T19:02:04Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "We have a [WIP PR](https://github.com/paritytech/substrate/pull/12972) for writing integration test of staking and election provider. This issue is to come up with more scenarios of emergency situation where election can fail and how we can recover from those situation that we can add to the integration test.  ",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/13342/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/13342/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/13309",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/13309/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/13309/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/13309/events",
    "html_url": "https://github.com/paritytech/substrate/issues/13309",
    "id": 1570259271,
    "node_id": "I_kwDOBoyF7M5dmEFH",
    "number": 13309,
    "title": "utility.dispatch_as error handling",
    "user": {
      "login": "sander2",
      "id": 2421693,
      "node_id": "MDQ6VXNlcjI0MjE2OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2421693?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sander2",
      "html_url": "https://github.com/sander2",
      "followers_url": "https://api.github.com/users/sander2/followers",
      "following_url": "https://api.github.com/users/sander2/following{/other_user}",
      "gists_url": "https://api.github.com/users/sander2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sander2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sander2/subscriptions",
      "organizations_url": "https://api.github.com/users/sander2/orgs",
      "repos_url": "https://api.github.com/users/sander2/repos",
      "events_url": "https://api.github.com/users/sander2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sander2/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560684,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODQ=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/U4-some_day_maybe",
        "name": "U4-some_day_maybe",
        "color": "d2d1d3",
        "default": false,
        "description": "Issue might be worth doing eventually."
      },
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      },
      {
        "id": 746560692,
        "node_id": "MDU6TGFiZWw3NDY1NjA2OTI=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z1-easy",
        "name": "Z1-easy",
        "color": "e8e0fc",
        "default": false,
        "description": "Can be fixed primarily by duplicating and adapting code by an intermediate coder"
      },
      {
        "id": 5121631623,
        "node_id": "LA_kwDOBoyF7M8AAAABMUXlhw",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/T1-runtime",
        "name": "T1-runtime",
        "color": "F5FCE6",
        "default": false,
        "description": "This PR/Issue is related to the topic “runtime”."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2023-02-03T18:16:18Z",
    "updated_at": "2023-06-07T15:33:36Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "The `utility.dispatch_as` function hides errors: https://github.com/paritytech/substrate/blob/8186c519a861ea519ed3dc4391f6e13f64300ce6/frame/utility/src/lib.rs#L392-L405\r\n\r\nThis is problematic when you have `dispatch_as` calls within `batch_all` calls - the batch will succeed despite errors. I assume that you won't want to change the behavior of existing extrinsics, so it would be really nice if a new function could be added that propagates the error. I'm struggling to come up with a suitable name to distinguish it from the extisting `dispatch_as` though..",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/13309/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/13309/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/13262",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/13262/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/13262/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/13262/events",
    "html_url": "https://github.com/paritytech/substrate/issues/13262",
    "id": 1561053760,
    "node_id": "I_kwDOBoyF7M5dC8pA",
    "number": 13262,
    "title": "`Defensive` ops API design",
    "user": {
      "login": "benluelo",
      "id": 57334811,
      "node_id": "MDQ6VXNlcjU3MzM0ODEx",
      "avatar_url": "https://avatars.githubusercontent.com/u/57334811?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benluelo",
      "html_url": "https://github.com/benluelo",
      "followers_url": "https://api.github.com/users/benluelo/followers",
      "following_url": "https://api.github.com/users/benluelo/following{/other_user}",
      "gists_url": "https://api.github.com/users/benluelo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benluelo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benluelo/subscriptions",
      "organizations_url": "https://api.github.com/users/benluelo/orgs",
      "repos_url": "https://api.github.com/users/benluelo/repos",
      "events_url": "https://api.github.com/users/benluelo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benluelo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      },
      {
        "id": 746560692,
        "node_id": "MDU6TGFiZWw3NDY1NjA2OTI=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z1-easy",
        "name": "Z1-easy",
        "color": "e8e0fc",
        "default": false,
        "description": "Can be fixed primarily by duplicating and adapting code by an intermediate coder"
      },
      {
        "id": 5121631623,
        "node_id": "LA_kwDOBoyF7M8AAAABMUXlhw",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/T1-runtime",
        "name": "T1-runtime",
        "color": "F5FCE6",
        "default": false,
        "description": "This PR/Issue is related to the topic “runtime”."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2023-01-28T23:49:13Z",
    "updated_at": "2023-06-07T15:33:40Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "The current API design for the [`DefensiveSaturating`](https://github.com/paritytech/substrate/blob/master/frame/support/src/traits/misc.rs#L350-L365) trait isn't great - it's unnecessarily monolithic. It should be split into several smaller traits, and then `DefensiveSaturating` can be retained as a super trait so this won't be a breaking change.\r\n\r\nI propose `DefensiveSaturating{Add,Sub,Mul}`, and then `DefensiveSaturatingInc` as a super trait of `DefensiveSaturatingAdd + One` and `DefensiveSaturatingDec` as a super trait of `DefensiveSaturatingSub + One`. This will allow users more granular control over the functionality they need, and removes this issue: https://github.com/paritytech/substrate/blob/master/frame/support/src/traits/misc.rs#L367-L368 (why does a type need to me `Mul` to use `defensive_saturating_sub`?)\r\n\r\nI'm happy to implement this if it's accepted :slightly_smiling_face:\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/13262/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/13262/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/13260",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/13260/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/13260/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/13260/events",
    "html_url": "https://github.com/paritytech/substrate/issues/13260",
    "id": 1561044296,
    "node_id": "I_kwDOBoyF7M5dC6VI",
    "number": 13260,
    "title": "[Deprecation] deprecate `trait Store` in FRAME storage",
    "user": {
      "login": "kianenigma",
      "id": 5588131,
      "node_id": "MDQ6VXNlcjU1ODgxMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5588131?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kianenigma",
      "html_url": "https://github.com/kianenigma",
      "followers_url": "https://api.github.com/users/kianenigma/followers",
      "following_url": "https://api.github.com/users/kianenigma/following{/other_user}",
      "gists_url": "https://api.github.com/users/kianenigma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kianenigma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kianenigma/subscriptions",
      "organizations_url": "https://api.github.com/users/kianenigma/orgs",
      "repos_url": "https://api.github.com/users/kianenigma/repos",
      "events_url": "https://api.github.com/users/kianenigma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kianenigma/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      },
      {
        "id": 746560692,
        "node_id": "MDU6TGFiZWw3NDY1NjA2OTI=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z1-easy",
        "name": "Z1-easy",
        "color": "e8e0fc",
        "default": false,
        "description": "Can be fixed primarily by duplicating and adapting code by an intermediate coder"
      },
      {
        "id": 5121631623,
        "node_id": "LA_kwDOBoyF7M8AAAABMUXlhw",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/T1-runtime",
        "name": "T1-runtime",
        "color": "F5FCE6",
        "default": false,
        "description": "This PR/Issue is related to the topic “runtime”."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [
      {
        "login": "juangirini",
        "id": 3775927,
        "node_id": "MDQ6VXNlcjM3NzU5Mjc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3775927?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/juangirini",
        "html_url": "https://github.com/juangirini",
        "followers_url": "https://api.github.com/users/juangirini/followers",
        "following_url": "https://api.github.com/users/juangirini/following{/other_user}",
        "gists_url": "https://api.github.com/users/juangirini/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/juangirini/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/juangirini/subscriptions",
        "organizations_url": "https://api.github.com/users/juangirini/orgs",
        "repos_url": "https://api.github.com/users/juangirini/repos",
        "events_url": "https://api.github.com/users/juangirini/events{/privacy}",
        "received_events_url": "https://api.github.com/users/juangirini/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2023-01-28T23:03:52Z",
    "updated_at": "2023-06-07T15:33:43Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "... similar to #13259, for now mark it as deprecated and remove all usage in Substrate. \r\n\r\n```[tasklist]\r\n### Deprecation steps\r\n - [x] Soft deprecation and removal from the codebase #13535\r\n - [ ] https://github.com/paritytech/substrate/issues/14221\r\n - [x] Hard deprecation by adding a deprecate compiler warning #13535\r\n - [ ] Deprecation is noted in the release log\r\n - [x] Removal version is planned -> after July 1\r\n - [ ] Deprecated feature is removed from the code base\r\n - [ ] Removal of the feature is noted in the release log\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/13260/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/13260/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/13259",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/13259/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/13259/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/13259/events",
    "html_url": "https://github.com/paritytech/substrate/issues/13259",
    "id": 1561043984,
    "node_id": "I_kwDOBoyF7M5dC6QQ",
    "number": 13259,
    "title": "[Deprecation] remove storage getters in FRAME",
    "user": {
      "login": "kianenigma",
      "id": 5588131,
      "node_id": "MDQ6VXNlcjU1ODgxMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5588131?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kianenigma",
      "html_url": "https://github.com/kianenigma",
      "followers_url": "https://api.github.com/users/kianenigma/followers",
      "following_url": "https://api.github.com/users/kianenigma/following{/other_user}",
      "gists_url": "https://api.github.com/users/kianenigma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kianenigma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kianenigma/subscriptions",
      "organizations_url": "https://api.github.com/users/kianenigma/orgs",
      "repos_url": "https://api.github.com/users/kianenigma/repos",
      "events_url": "https://api.github.com/users/kianenigma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kianenigma/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      },
      {
        "id": 746560692,
        "node_id": "MDU6TGFiZWw3NDY1NjA2OTI=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z1-easy",
        "name": "Z1-easy",
        "color": "e8e0fc",
        "default": false,
        "description": "Can be fixed primarily by duplicating and adapting code by an intermediate coder"
      },
      {
        "id": 5121631623,
        "node_id": "LA_kwDOBoyF7M8AAAABMUXlhw",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/T1-runtime",
        "name": "T1-runtime",
        "color": "F5FCE6",
        "default": false,
        "description": "This PR/Issue is related to the topic “runtime”."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [
      {
        "login": "muraca",
        "id": 56828990,
        "node_id": "MDQ6VXNlcjU2ODI4OTkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/56828990?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/muraca",
        "html_url": "https://github.com/muraca",
        "followers_url": "https://api.github.com/users/muraca/followers",
        "following_url": "https://api.github.com/users/muraca/following{/other_user}",
        "gists_url": "https://api.github.com/users/muraca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/muraca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/muraca/subscriptions",
        "organizations_url": "https://api.github.com/users/muraca/orgs",
        "repos_url": "https://api.github.com/users/muraca/repos",
        "events_url": "https://api.github.com/users/muraca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/muraca/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 22,
    "created_at": "2023-01-28T23:02:25Z",
    "updated_at": "2023-06-07T15:33:45Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "... or for now mark them as deprecated, and just remove all usage in substrate. ",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/13259/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/13259/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/13115",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/13115/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/13115/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/13115/events",
    "html_url": "https://github.com/paritytech/substrate/issues/13115",
    "id": 1527489047,
    "node_id": "I_kwDOBoyF7M5bC6IX",
    "number": 13115,
    "title": "Add `TryState` hook for `MessageQueue`",
    "user": {
      "login": "ggwpez",
      "id": 10380170,
      "node_id": "MDQ6VXNlcjEwMzgwMTcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/10380170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ggwpez",
      "html_url": "https://github.com/ggwpez",
      "followers_url": "https://api.github.com/users/ggwpez/followers",
      "following_url": "https://api.github.com/users/ggwpez/following{/other_user}",
      "gists_url": "https://api.github.com/users/ggwpez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ggwpez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ggwpez/subscriptions",
      "organizations_url": "https://api.github.com/users/ggwpez/orgs",
      "repos_url": "https://api.github.com/users/ggwpez/repos",
      "events_url": "https://api.github.com/users/ggwpez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ggwpez/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560630,
        "node_id": "MDU6TGFiZWw3NDY1NjA2MzA=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/I5-tests",
        "name": "I5-tests",
        "color": "f3a603",
        "default": false,
        "description": "Tests need fixing, improving or augmenting."
      },
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      },
      {
        "id": 746560692,
        "node_id": "MDU6TGFiZWw3NDY1NjA2OTI=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z1-easy",
        "name": "Z1-easy",
        "color": "e8e0fc",
        "default": false,
        "description": "Can be fixed primarily by duplicating and adapting code by an intermediate coder"
      },
      {
        "id": 5121631623,
        "node_id": "LA_kwDOBoyF7M8AAAABMUXlhw",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/T1-runtime",
        "name": "T1-runtime",
        "color": "F5FCE6",
        "default": false,
        "description": "This PR/Issue is related to the topic “runtime”."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "gitofdeepanshu",
      "id": 43631678,
      "node_id": "MDQ6VXNlcjQzNjMxNjc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/43631678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gitofdeepanshu",
      "html_url": "https://github.com/gitofdeepanshu",
      "followers_url": "https://api.github.com/users/gitofdeepanshu/followers",
      "following_url": "https://api.github.com/users/gitofdeepanshu/following{/other_user}",
      "gists_url": "https://api.github.com/users/gitofdeepanshu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gitofdeepanshu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gitofdeepanshu/subscriptions",
      "organizations_url": "https://api.github.com/users/gitofdeepanshu/orgs",
      "repos_url": "https://api.github.com/users/gitofdeepanshu/repos",
      "events_url": "https://api.github.com/users/gitofdeepanshu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gitofdeepanshu/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "gitofdeepanshu",
        "id": 43631678,
        "node_id": "MDQ6VXNlcjQzNjMxNjc4",
        "avatar_url": "https://avatars.githubusercontent.com/u/43631678?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gitofdeepanshu",
        "html_url": "https://github.com/gitofdeepanshu",
        "followers_url": "https://api.github.com/users/gitofdeepanshu/followers",
        "following_url": "https://api.github.com/users/gitofdeepanshu/following{/other_user}",
        "gists_url": "https://api.github.com/users/gitofdeepanshu/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gitofdeepanshu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gitofdeepanshu/subscriptions",
        "organizations_url": "https://api.github.com/users/gitofdeepanshu/orgs",
        "repos_url": "https://api.github.com/users/gitofdeepanshu/repos",
        "events_url": "https://api.github.com/users/gitofdeepanshu/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gitofdeepanshu/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2023-01-10T14:31:03Z",
    "updated_at": "2023-06-07T15:34:09Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "The `MessageQueue` pallet has quite a few storage assumptions which could be checked in a `try_state` hook.   \r\n\r\n:point_right: *Mentor* issues are meant for new-comers. Please ask before picking them up.",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/13115/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/13115/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/13061",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/13061/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/13061/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/13061/events",
    "html_url": "https://github.com/paritytech/substrate/issues/13061",
    "id": 1518907996,
    "node_id": "I_kwDOBoyF7M5aiLJc",
    "number": 13061,
    "title": "Allow runtime-wide `TryState` checks",
    "user": {
      "login": "ggwpez",
      "id": 10380170,
      "node_id": "MDQ6VXNlcjEwMzgwMTcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/10380170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ggwpez",
      "html_url": "https://github.com/ggwpez",
      "followers_url": "https://api.github.com/users/ggwpez/followers",
      "following_url": "https://api.github.com/users/ggwpez/following{/other_user}",
      "gists_url": "https://api.github.com/users/ggwpez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ggwpez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ggwpez/subscriptions",
      "organizations_url": "https://api.github.com/users/ggwpez/orgs",
      "repos_url": "https://api.github.com/users/ggwpez/repos",
      "events_url": "https://api.github.com/users/ggwpez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ggwpez/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560635,
        "node_id": "MDU6TGFiZWw3NDY1NjA2MzU=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/J0-enhancement",
        "name": "J0-enhancement",
        "color": "006b75",
        "default": false,
        "description": "An additional feature request."
      },
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      },
      {
        "id": 5121631623,
        "node_id": "LA_kwDOBoyF7M8AAAABMUXlhw",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/T1-runtime",
        "name": "T1-runtime",
        "color": "F5FCE6",
        "default": false,
        "description": "This PR/Issue is related to the topic “runtime”."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2023-01-04T12:38:33Z",
    "updated_at": "2023-06-07T15:34:16Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Currently the `TryState` can only be utilized on a per-pallet level by implementing the `try_state` hook.   \r\nThis limits the usage tor multi-pallet `try_state` functionality. `Executive` could be extended to accept an optional `TryState` which will then be executed by the try-runtime CLI on a runtime-wide level.\r\n\r\ncc @kianenigma ",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/13061/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/13061/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/13044",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/13044/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/13044/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/13044/events",
    "html_url": "https://github.com/paritytech/substrate/issues/13044",
    "id": 1516712990,
    "node_id": "I_kwDOBoyF7M5aZzQe",
    "number": 13044,
    "title": "Way to enable/disable a phase in EPM",
    "user": {
      "login": "Ank4n",
      "id": 10196091,
      "node_id": "MDQ6VXNlcjEwMTk2MDkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/10196091?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ank4n",
      "html_url": "https://github.com/Ank4n",
      "followers_url": "https://api.github.com/users/Ank4n/followers",
      "following_url": "https://api.github.com/users/Ank4n/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ank4n/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ank4n/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ank4n/subscriptions",
      "organizations_url": "https://api.github.com/users/Ank4n/orgs",
      "repos_url": "https://api.github.com/users/Ank4n/repos",
      "events_url": "https://api.github.com/users/Ank4n/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ank4n/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      },
      {
        "id": 746560692,
        "node_id": "MDU6TGFiZWw3NDY1NjA2OTI=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z1-easy",
        "name": "Z1-easy",
        "color": "e8e0fc",
        "default": false,
        "description": "Can be fixed primarily by duplicating and adapting code by an intermediate coder"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2023-01-02T20:58:41Z",
    "updated_at": "2023-02-11T17:55:27Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "During an ongoing incident, we might want to alter the phase in EPM in order to\r\n- stop normal election by enabling Emergency Phase. \r\n- reset normal election by rotating round, or switching phase to `off`.\r\n- tell EPM to be prepared for the next election manually by setting phase to `Signed` and then `forcing era` on staking once epm has a signed solution.\r\n\r\nThese ops could be very useful during a crisis. Specifically, we should have a call (or multiple calls) that allows `ForceOrigin` to transition EPM to a new phase.",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/13044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/13044/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/12831",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/12831/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/12831/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/12831/events",
    "html_url": "https://github.com/paritytech/substrate/issues/12831",
    "id": 1473297467,
    "node_id": "I_kwDOBoyF7M5X0Lw7",
    "number": 12831,
    "title": "Tracking issue for adding `try_state` hook to all pallets. ",
    "user": {
      "login": "kianenigma",
      "id": 5588131,
      "node_id": "MDQ6VXNlcjU1ODgxMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5588131?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kianenigma",
      "html_url": "https://github.com/kianenigma",
      "followers_url": "https://api.github.com/users/kianenigma/followers",
      "following_url": "https://api.github.com/users/kianenigma/following{/other_user}",
      "gists_url": "https://api.github.com/users/kianenigma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kianenigma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kianenigma/subscriptions",
      "organizations_url": "https://api.github.com/users/kianenigma/orgs",
      "repos_url": "https://api.github.com/users/kianenigma/repos",
      "events_url": "https://api.github.com/users/kianenigma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kianenigma/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560662,
        "node_id": "MDU6TGFiZWw3NDY1NjA2NjI=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/J1-meta",
        "name": "J1-meta",
        "color": "0C7BAD",
        "default": false,
        "description": "A specific issue for grouping tasks or bugs of a specific category."
      },
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      },
      {
        "id": 5121631623,
        "node_id": "LA_kwDOBoyF7M8AAAABMUXlhw",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/T1-runtime",
        "name": "T1-runtime",
        "color": "F5FCE6",
        "default": false,
        "description": "This PR/Issue is related to the topic “runtime”."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2022-12-02T18:46:58Z",
    "updated_at": "2023-06-13T10:15:25Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "This is the tracking issue to add the `try_state` hook to as many pallets as we can. \r\n\r\nThis hook was added in https://github.com/paritytech/substrate/pull/10174. The idea is as follows: \r\n\r\n\r\n```rust\r\n/// Execute some checks to ensure the internal state of a pallet is consistent.\r\n///\r\n/// Usually, these checks should check all of the invariants that are expected to be held on all of\r\n/// the storage items of your pallet.\r\n///\r\n/// This hook should not alter any storage.\r\npub trait TryState<BlockNumber> {\r\n\t/// Execute the state checks.\r\n\tfn try_state(_: BlockNumber) -> Result<(), &'static str>;\r\n}\r\n```\r\n\r\nSo, the ideas is to focus on invariants that must always be held in a pallet. A native, yet important example of this is that in the balances pallet, iterating over all users should yield the correct total issuance. \r\n\r\nNext, we want all pallets to call their `try_state` after each test. This can easily be achieved with a helper function like: \r\n\r\nhttps://github.com/paritytech/substrate/blob/dd8a34775aab9b362a5cc7552d5603c2fe812f82/frame/nomination-pools/src/mock.rs#L335\r\n\r\n```rust\r\npub fn build_and_execute(self, test: impl FnOnce() -> ()) {\r\n\tself.build().execute_with(|| {\r\n\t\ttest();\r\n\t\t// run the try-state of all pallets after each test.  \r\n\t\t<Runtime as TryState>::try_state(_, TryStateSelect::All).unwrap();\r\n\t})\r\n}\r\n```\r\n\r\n\r\nHere is a list of current FRAME pallets, just for the sake of reference. Many of them won't need a `try_state` hook though. \r\n\r\n- [ ] alliance\r\n- [ ] assets\r\n- [ ] atomic-swap\r\n- [ ] aura\r\n- [ ] authority-discovery\r\n- [ ] authorship\r\n- [ ] babe\r\n- [x] bags-list\r\n- [ ] balances\r\n- [ ] beefy\r\n- [ ] beefy-mmr\r\n- [ ] bounties\r\n- [ ] child-bounties\r\n- [x] collective\r\n- [ ] contracts\r\n- [ ] conviction-voting\r\n- [ ] democracy\r\n- [ ] election-provider-multi-phase\r\n- [ ] election-provider-support\r\n- [ ] elections-phragmen\r\n- [ ] examples\r\n- [ ] fast-unstake\r\n- [ ] gilt\r\n- [ ] grandpa\r\n- [ ] identity\r\n- [ ] im-online\r\n- [ ] indices\r\n- [ ] lottery\r\n- [ ] membership\r\n- [ ] merkle-mountain-range\r\n- [ ] message-queue https://github.com/paritytech/substrate/issues/13115\r\n- [ ] multisig\r\n- [x] nicks\r\n- [ ] node-authorization\r\n- [x] nomination-pools\r\n- [ ] offences\r\n- [ ] preimage\r\n- [ ] proxy\r\n- [ ] randomness-collective-flip\r\n- [ ] ranked-collective\r\n- [ ] recovery\r\n- [ ] referenda @Szegoo https://github.com/paritytech/substrate/pull/13949\r\n- [ ] remark\r\n- [ ] root-offences\r\n- [ ] root-testing\r\n- [ ] scheduler\r\n- [ ] scored-pool\r\n- [ ] session\r\n- [ ] society\r\n- [x] staking\r\n- [ ] state-trie-migration\r\n- [ ] sudo\r\n- [ ] support\r\n- [ ] system\r\n- [x] timestamp\r\n- [ ] tips @Doordashcon https://github.com/paritytech/substrate/pull/13515\r\n- [ ] transaction-payment\r\n- [ ] transaction-storage\r\n- [ ] treasury\r\n- [ ] uniques\r\n- [x] utility\r\n- [ ] vesting @Doordashcon https://github.com/paritytech/substrate/pull/13515\r\n- [ ] whitelist\r\n\r\nImplementing this hook will allow these checks to be called in `try-runtime-cli`, and other testing tools that compile a runtime with `feature = try-runtime`. \r\n\r\nNote that for those who want to tackle a particular pallet, you must for sure deeply understand a pallet in order to correctly identify its list of invariants. Moreover, you might do your future generation a favor by documenting the invariants as good as you can. \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/12831/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/12831/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/12649",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/12649/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/12649/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/12649/events",
    "html_url": "https://github.com/paritytech/substrate/issues/12649",
    "id": 1440311472,
    "node_id": "I_kwDOBoyF7M5V2Wiw",
    "number": 12649,
    "title": "[Deprecation] `Index` vs `Nonce`",
    "user": {
      "login": "AurevoirXavier",
      "id": 16152305,
      "node_id": "MDQ6VXNlcjE2MTUyMzA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/16152305?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AurevoirXavier",
      "html_url": "https://github.com/AurevoirXavier",
      "followers_url": "https://api.github.com/users/AurevoirXavier/followers",
      "following_url": "https://api.github.com/users/AurevoirXavier/following{/other_user}",
      "gists_url": "https://api.github.com/users/AurevoirXavier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AurevoirXavier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AurevoirXavier/subscriptions",
      "organizations_url": "https://api.github.com/users/AurevoirXavier/orgs",
      "repos_url": "https://api.github.com/users/AurevoirXavier/repos",
      "events_url": "https://api.github.com/users/AurevoirXavier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AurevoirXavier/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560631,
        "node_id": "MDU6TGFiZWw3NDY1NjA2MzE=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/I6-documentation",
        "name": "I6-documentation",
        "color": "fbca04",
        "default": false,
        "description": "Documentation needs fixing, improving or augmenting."
      },
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      },
      {
        "id": 746560692,
        "node_id": "MDU6TGFiZWw3NDY1NjA2OTI=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z1-easy",
        "name": "Z1-easy",
        "color": "e8e0fc",
        "default": false,
        "description": "Can be fixed primarily by duplicating and adapting code by an intermediate coder"
      },
      {
        "id": 5121631623,
        "node_id": "LA_kwDOBoyF7M8AAAABMUXlhw",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/T1-runtime",
        "name": "T1-runtime",
        "color": "F5FCE6",
        "default": false,
        "description": "This PR/Issue is related to the topic “runtime”."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "juangirini",
      "id": 3775927,
      "node_id": "MDQ6VXNlcjM3NzU5Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3775927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juangirini",
      "html_url": "https://github.com/juangirini",
      "followers_url": "https://api.github.com/users/juangirini/followers",
      "following_url": "https://api.github.com/users/juangirini/following{/other_user}",
      "gists_url": "https://api.github.com/users/juangirini/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juangirini/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juangirini/subscriptions",
      "organizations_url": "https://api.github.com/users/juangirini/orgs",
      "repos_url": "https://api.github.com/users/juangirini/repos",
      "events_url": "https://api.github.com/users/juangirini/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juangirini/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "juangirini",
        "id": 3775927,
        "node_id": "MDQ6VXNlcjM3NzU5Mjc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3775927?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/juangirini",
        "html_url": "https://github.com/juangirini",
        "followers_url": "https://api.github.com/users/juangirini/followers",
        "following_url": "https://api.github.com/users/juangirini/following{/other_user}",
        "gists_url": "https://api.github.com/users/juangirini/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/juangirini/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/juangirini/subscriptions",
        "organizations_url": "https://api.github.com/users/juangirini/orgs",
        "repos_url": "https://api.github.com/users/juangirini/repos",
        "events_url": "https://api.github.com/users/juangirini/events{/privacy}",
        "received_events_url": "https://api.github.com/users/juangirini/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2022-11-08T14:28:59Z",
    "updated_at": "2023-06-07T15:34:50Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "### Is there an existing issue?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Experiencing problems? Have you tried our Stack Exchange first?\r\n\r\n- [X] This is not a support question.\r\n\r\n### Description of bug\r\n\r\nWhy do we need two different names for the same thing?\r\n\r\nIMO this adds extra learning effort for developers.\r\n\r\n```rs\r\nuse xxx::Index;\r\npub use xxx::Index as Nonce;\r\n\r\nimpl frame_system::Config {\r\n  type Index = Index;\r\n}\r\n\r\nsubstrate_frame_rpc_system::AccountNonceApi<Block, AccountId, Nonce>;\r\n```\r\n\r\n---\r\n\r\nI think maybe they are two different things.\r\n\r\nIndex is to describe the transaction index in the block.\r\n\r\nNonce is the account transactions counter.\r\n\r\nAnd they are `u32`.\r\n\r\nBut the `pub use as` makes people confused. \r\n\r\n---\r\n\r\n```[tasklist]\r\n### Deprecation steps\r\n- [x] ~~Soft deprecation and removal from the codebase~~\r\n- [ ] Update examples and tutorials\r\n- [x] ~~Hard deprecation by adding a deprecate compiler warning~~\r\n- [ ] Deprecation is noted in the release log\r\n- [x] Removal version is planned -> Next release\r\n- [ ] Deprecated feature is removed from the code base https://github.com/paritytech/substrate/pull/14290\r\n- [ ] Removal of the feature is noted in the release log\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/12649/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/12649/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/12523",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/12523/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/12523/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/12523/events",
    "html_url": "https://github.com/paritytech/substrate/issues/12523",
    "id": 1413508917,
    "node_id": "I_kwDOBoyF7M5UQG81",
    "number": 12523,
    "title": "Switch proc macro docs to be on re-exports so we can have doc links to outer crate items",
    "user": {
      "login": "sam0x17",
      "id": 1855021,
      "node_id": "MDQ6VXNlcjE4NTUwMjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1855021?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sam0x17",
      "html_url": "https://github.com/sam0x17",
      "followers_url": "https://api.github.com/users/sam0x17/followers",
      "following_url": "https://api.github.com/users/sam0x17/following{/other_user}",
      "gists_url": "https://api.github.com/users/sam0x17/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sam0x17/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sam0x17/subscriptions",
      "organizations_url": "https://api.github.com/users/sam0x17/orgs",
      "repos_url": "https://api.github.com/users/sam0x17/repos",
      "events_url": "https://api.github.com/users/sam0x17/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sam0x17/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      },
      {
        "id": 746560692,
        "node_id": "MDU6TGFiZWw3NDY1NjA2OTI=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z1-easy",
        "name": "Z1-easy",
        "color": "e8e0fc",
        "default": false,
        "description": "Can be fixed primarily by duplicating and adapting code by an intermediate coder"
      },
      {
        "id": 5121631623,
        "node_id": "LA_kwDOBoyF7M8AAAABMUXlhw",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/T1-runtime",
        "name": "T1-runtime",
        "color": "F5FCE6",
        "default": false,
        "description": "This PR/Issue is related to the topic “runtime”."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2022-10-18T16:23:08Z",
    "updated_at": "2023-06-07T15:35:04Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Right now the frame proc macros (especially the `pallet::` ones) follow the pattern of documenting proc macros inside their corresponding inner proc macro crates (i.e. `frame_support_procedural`). I standardized this in a number of places in #12333 / #12334.\r\n\r\nA major reason for this is tools like `rust-analyzer` right now do not conform with the `cargo doc` behavior of prepending docs that are attached to re-exported items (i.e. macros, functions, traits, etc) and in fact completely ignore docs on re-exports (see my companion issue in `rust-analyzer`: https://github.com/rust-lang/rust-analyzer/issues/13431).\r\n\r\nThis is why in #12334 I ended up switching all of the `pallet::` macros to have their docs _inside_ `frame_support_procedural` because then `rust-analyzer` will actually pick them up upon mouse-over.\r\n\r\nThe problem with this is inner crates can only generate doc links to items that are visible from the inner crate. For non-proc-macro crates the workaround is easy -- simply set up a circular reference between the inner crate and the outer crate so the outer crate items are visible/linkable from the inner crate. This doesn't work for proc macro crates, however, because rust restricts proc macro crates so that they are only allowed to publicly export proc macros (no other items are allowed), so even if we `pub use outer_crate::*` to make all the outer crate's items accessible within the inner crate, this will fail to compile since we are trying to export something other than a proc macro in a proc macro crate.\r\n\r\nThus we are at a bit of a stand-still. Ideally `rust-analyzer` would handle docs on re-exports properly the way `cargo doc` does and we would switch to only documenting proc macros where their re-exports are defined in the outer crate.\r\n\r\nSo this is blocked until https://github.com/rust-lang/rust-analyzer/issues/13431 is addressed in `rust-analyzer` or some other solution (like better support for inter-crate doc linking) is added to rust.\r\n\r\nOne possible alternative solution would be to link directly to the docs.rs links for the outer items from the inner macro declarations. This has some obvious downsides (like `rust-analyzer` will open a web browser instead of following the links inline), but if this issue sits for a long period of time this might be the way to go.\r\n\r\nNote: the one thing I _haven't_ tried is trying to `pub use` the outer crate items in the inner proc macro crate while gating this with a `#[cfg(doc)]` directive. I doubt it will compile but it's the only thing I haven't tried so would be cool if someone could confirm (or if someone knows) that this doesn't work.\r\n\r\n## Related Issues\r\n* #12333\r\n* https://github.com/rust-lang/rust-analyzer/issues/13431\r\n\r\n## Related PRs\r\n* #12334 ",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/12523/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/12523/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/paritytech/substrate/issues/12458",
    "repository_url": "https://api.github.com/repos/paritytech/substrate",
    "labels_url": "https://api.github.com/repos/paritytech/substrate/issues/12458/labels{/name}",
    "comments_url": "https://api.github.com/repos/paritytech/substrate/issues/12458/comments",
    "events_url": "https://api.github.com/repos/paritytech/substrate/issues/12458/events",
    "html_url": "https://github.com/paritytech/substrate/issues/12458",
    "id": 1402631995,
    "node_id": "I_kwDOBoyF7M5Tmnc7",
    "number": 12458,
    "title": "Make Assets Pallet's Privileged Roles `Option`",
    "user": {
      "login": "joepetrowski",
      "id": 25483142,
      "node_id": "MDQ6VXNlcjI1NDgzMTQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/25483142?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joepetrowski",
      "html_url": "https://github.com/joepetrowski",
      "followers_url": "https://api.github.com/users/joepetrowski/followers",
      "following_url": "https://api.github.com/users/joepetrowski/following{/other_user}",
      "gists_url": "https://api.github.com/users/joepetrowski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joepetrowski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joepetrowski/subscriptions",
      "organizations_url": "https://api.github.com/users/joepetrowski/orgs",
      "repos_url": "https://api.github.com/users/joepetrowski/repos",
      "events_url": "https://api.github.com/users/joepetrowski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joepetrowski/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 746560635,
        "node_id": "MDU6TGFiZWw3NDY1NjA2MzU=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/J0-enhancement",
        "name": "J0-enhancement",
        "color": "006b75",
        "default": false,
        "description": "An additional feature request."
      },
      {
        "id": 746560688,
        "node_id": "MDU6TGFiZWw3NDY1NjA2ODg=",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/Z6-mentor",
        "name": "Z6-mentor",
        "color": "FDEFFB",
        "default": false,
        "description": "An easy task where a mentor is available. Please indicate in the issue who the mentor could be."
      },
      {
        "id": 5121631623,
        "node_id": "LA_kwDOBoyF7M8AAAABMUXlhw",
        "url": "https://api.github.com/repos/paritytech/substrate/labels/T1-runtime",
        "name": "T1-runtime",
        "color": "F5FCE6",
        "default": false,
        "description": "This PR/Issue is related to the topic “runtime”."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "vieira-giulia",
      "id": 71223172,
      "node_id": "MDQ6VXNlcjcxMjIzMTcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/71223172?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vieira-giulia",
      "html_url": "https://github.com/vieira-giulia",
      "followers_url": "https://api.github.com/users/vieira-giulia/followers",
      "following_url": "https://api.github.com/users/vieira-giulia/following{/other_user}",
      "gists_url": "https://api.github.com/users/vieira-giulia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vieira-giulia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vieira-giulia/subscriptions",
      "organizations_url": "https://api.github.com/users/vieira-giulia/orgs",
      "repos_url": "https://api.github.com/users/vieira-giulia/repos",
      "events_url": "https://api.github.com/users/vieira-giulia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vieira-giulia/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dharjeezy",
        "id": 11888724,
        "node_id": "MDQ6VXNlcjExODg4NzI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/11888724?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dharjeezy",
        "html_url": "https://github.com/dharjeezy",
        "followers_url": "https://api.github.com/users/dharjeezy/followers",
        "following_url": "https://api.github.com/users/dharjeezy/following{/other_user}",
        "gists_url": "https://api.github.com/users/dharjeezy/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dharjeezy/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dharjeezy/subscriptions",
        "organizations_url": "https://api.github.com/users/dharjeezy/orgs",
        "repos_url": "https://api.github.com/users/dharjeezy/repos",
        "events_url": "https://api.github.com/users/dharjeezy/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dharjeezy/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2022-10-10T05:52:38Z",
    "updated_at": "2023-06-12T09:57:32Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Change the [privileged asset roles](https://github.com/paritytech/substrate/blob/73c4f94ce0cb41e35bd7fbc7095590b98a351dbb/frame/assets/src/types.rs#L34L41) from `AccountId` to `Option<AccountId>`. When the `owner` is set to `None`, only governance would be able to restore the role.\r\n\r\nFor discussion, if `owner` is `Some`, and they want to set a lower rank role from `None` to `Some`, should that require governance?\r\n\r\nThis would look similar to the [`PoolRoles` struct](https://github.com/paritytech/substrate/blob/73c4f94ce0cb41e35bd7fbc7095590b98a351dbb/frame/nomination-pools/src/lib.rs#L528) in Nomination Pools. \r\n\r\n_Originally posted by @joepetrowski in https://github.com/paritytech/substrate/pull/12310#discussion_r982367220_\r\n      ",
    "reactions": {
      "url": "https://api.github.com/repos/paritytech/substrate/issues/12458/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/paritytech/substrate/issues/12458/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  }
]
